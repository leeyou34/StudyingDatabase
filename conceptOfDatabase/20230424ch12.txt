날짜: 20230424
작성자: leeyou34
공부 범주:
    가. chapter 12 객체지향 데이터베이스
    
요약:


가. chapter 12: 객체지향 데이터베이스
    
                1980년대 초반부터 관계 데이터베이스와 다른 형태의 데이터베이스를 구축하기 위해 새로운 데이터 모델 중 하나가 객체 지향 데이터 모델이다.
    
            12-01: 객체지향 데이터베이스
            
                1. 객체지향 데이터 모델: 객체와 객체 식별자, 속성과 메서드, 클래스, 클래스 계층 및 상속, 복합 객체 등을 지원하는 객체지향 개념에 기반을 둔 데이터 모델이다.
                
                    1-1. 객체와 객체 식별자
                         객체는 현실 세계에 존재하는 개체를 추상적으로 표현한 것이다. 각 객체는 시스템 전체에서 유일하게 식별될 수 있는 객체 식별자를 가지고,
                         객체 식별자를 특정 객체에 접근하기 위한 유일한 수단으로 사용한다.
                   
                    1-2. 속성과 메서드
                         객체지향 데이터 모델을 구성하는 기본 요소인 객체는 해당 객체의 상태를 나타내는 하나 이상의 속성과
                         객체의 상태를 조작할 수 있는 하나 이상의 메서드로 구성된다.
                         객체지향 데이터 모델의 속성(attribute)는 관계 데이터 모델의 속성과 같은 의미로 볼 수 있다.
                         객체지향 데이터 모델의 메서드는 객체에 수행할 수 있는 연산이다.
                   
                    1-3. 클래스
                         클래스는 속성과 메서드를 공유하는 유사한 성질의 객체들을 하나로 그룹화한 것이다.
                         객체는 클래스 구성원으로, 클래스 인스턴스 또는 객체 인스턴스라고도 한다.
                         클래스 내부에는 해당 클랫의 객체를 위한 데이터 구조와 메서드 구현에 관한 세부 사항을 기술한다.
                  
                    1-4. 클래스 계층과 상속
                         클래스를 단계적으로 세분화(specialization)하면 클래스 간의 계층 관계가 발생하여 결과적으로 클래스 계층(class hierarchy)이 하나 형성된다.
                         클래스 계층에서 상위에 있는 클래스를 상위 클래스superclass라 하고, 하위에 있는 클래스를 하위클래스(subclass)라고 한다.
                   
                
                    1-5. 복합 객체
                        시스템에서 기본으로 제공하지 않는 사용자 정의 클래스(user-defined class)를 
                        도메인으로 하는 속성을 가진 객체를 복합 객체(composite object)이라고 한다.
                        복합 객체에서 사용자 정의 클래스를 도메인으로 하는 속성은 해당 클래스에 속하는 객체 인스턴스의 객체 식별자를 값으로 가지게 된다.
                   
                2. 객체지향 질의 모델
                 
                   객체지향 데이터베이스에서는 질의 대상이 클래스이고 질의 결과는 클래스에 속하는 객체 집합이다.
                   객체지향 데이터베이스에서는 객체지향 개념을 기반으로 클래스, 속성, 메서드, 객체 등을 이용해 질의를 표현한다.
                

            12-02: 객체지향 데이터베이스
                            
                   객체지향 데이터베이스가 특수한 몇몇 분야에서만 많이 사용되는 한계를 극복하기 위해,
                   널리 사용되는 관계 데이터 모델과 다양하고 복잡한 분야의 데이터 모델링에
                   활용이 가능한 객체지향 데이터 모델의 장점을 모두 가진 새로운 데이터 모델의 필요성이 대두됨
                   
                   객체관계 데이터 모델은 객체지향 개념과 관계 데이터 모델의 개념을 통합한 것
                   
            12-03: 분산 데이터베이스 시스템
                       
                   데이터베이스 시스템을 물리적으로 한 장소에 설치하여 운영하는 것을 중앙 집중식 데이터베이스 시스템이라 한다.
                   물리적으로 분산된 데이터베이스 시스템을 네트워크로 연결해, 사용자가 논리적으로는 하나의 중앙 집중식 데이터베이스 시스템처러 ㅁ사용할 수 있도로 ㄱ한것을
                   본삭 데이터베이스 시스템이라 한다.
                   
                   1. 분산 데이터베이스 시스템 구성
                        1-1. 분산 처리기: 지역에서 운영하는 데이터베이스를 자체적으로 관리할 수 있는 DBMS를 가지고 있다.
                        1-2. 분산 데이터베이스: 각 지역의 분산 처리기에 설치된 데이터베이스 관리 시스템이 이를 관리한다.
                        1-3. 통신 네트워크: 통신 네트워크에 있는 모든 분산 처리기는 특정 통신규약에 따라 데이터를 전송하고 수신한다.
                        
                   2. 분산 데이터베이스 시스템의 주요 목표
                        데이터베이스가 분산 되어 있음을 사용자가 인식하지 못하게 하며, 이를 분산 데이터 독립성 distributed data independency라고 한다.
                        
                        2-1. 위치 투명성: 위치 투명성은 데이터베이스가 지역적으로 분산되어 있지만, 사용자가 접근하려는 데이터의 실제 저장 위치를 알 필요 없이
                                          데이터베이스의 논리적인 이름만드로 데이터에 접근할 수 있다는 의미다.
                        
                        2-2. 중복 투명성: 데이터베이스를 여러 지역에 분산해 저장 할 때 두 가지 방법을 생각할 수 있다.
                                          1) 데이터가 중복되지 않게 분할하여 지역의 분산 데이터베이스에 저장
                                          2) 지역의 분산 데이터베이스에 데이터를 중복하여 저장
                                          
                        2-3. 단편화 투명성: 하나의 릴레이션을 더 작은 조각(단편)으로 나누고 각 조각을 별개의 릴레이션으로 처리하는 것이다.
                
                            1) 수평적 단편화: 릴레이션을 수평적으로 단편화하는 것
                            2) 수직전 단편화: 릴레이션을 수직적으로 단편화
                            3) 혼합 단편화: 수평적과 수직적 단편화를 모두 사용하여 릴레이션을 나눔.
                            
                        2-4. 병행 투명성: 분산 데이터베이스와 관련된 트랜잭션들이 동시에 수행되더라도 결과는 항상 일관성을 유지.
                        
                        2-5. 장애 투명성: 특정 지역 시스템에 문제가 발생하더라도 전체 시스템이 작업을 계속 수행
                        
                   3. 분산 데이터베이스의 구조
                            1) 전역 개념 스키마: 분산 데이터베이스에 저장할 모든 데이터 구조와 제약 조건을 정의
                            2) 단편화 스키마: 전역 개념 스키마를 분할하는 방법인 단편화를 정의한다.
                            3) 할당 스키마: 각 조각 스키마의 인스턴스를 물리적으로 저장해야 되는 지역을 정의
                            4) 지역 스키마: 지역별로 저장하고 있는 데이터 구조와 제약조건을 정의
                            
                   4. 분산 데이터베이스의 질의 처리
                         중앙 집중식 데이터베이스 시스템에서는 최선의 질의 처리 전략을 선택하는 기준으로 데이터베이스가 위치한 디스크에 접근하는 횟수를 이용한다.
                         
                   5. 분산 데이터베이스 시스템의 장 단점
                       5-1. 분산 데이터베이스 시스템의 장점: 
                             1) 신뢰성과 가용성 증대
                             2) 지역 자치성과 효율성 증대
                             3) 확장성 증대
                             
                       5-2. 분산 데이터베이스 시스템의 단점
                          고려할 사항이 많아 설계 및 구축 비용이 더 많이 든다.
                             
                   
            12-04: 멀티미디어 데이터베이스 시스템
                    멀티미디어 데이터베이스 시스템은 숫자나 문자 데이터와 같은 일반 데이터를 처리하는 기능뿐 아니라 영상, 음향 및 애니메이션과 같은 멀티미디어 데이터도
                    효과적으로 저장하고 처리하는 기능을 함께 제공해야 한다.
            
                   1. 멀티미디어 데이터의 특성
                      여러 미디어의 조합으로 이루어진 데이터를 멀티미디어 데이터라고 한다.
                   
                      멀티미디어 데이터의 유형
                        텍스트: 문자로 구성된 데이터
                        그래픽: 수학 공식을 기반으로 제작된 벡터 이미지 데이터
                        이미지: 정적 이미지나 사진과 같이 픽셀 단위로 표현되는 비트맵 이미지
                        비디오: 동영상, 애니메이션
                        오디오: 음성, 소리, 음악
                            
                        1) 대용량 데이터: 멀티미디어 데이터는 일반적으로 숫자나 문자 데이터와 달리, 크기가 수킬로바이트에서 수십 메가바이트 이상이다.
                                          그래서 압축해서 저장한다.
                                          즉, 일반 데이터와는 다른 구조로 별도의 저장 공간을 구성하여 관리해야 한다.
                        
                        2) 검색 방법이 복잡한 데이터:
                            2-1) 설명 기반 검색: 멀티미디어 데이터의 특성을 나타내는 키워드나 자세한 설명을 멀티미디어 데이터와 함께 저장해두었다가 이를 검색에 이용
                            2-2) 내용 기반 검색: 멀티미디어 데이터의 실제 내용을 이용하여 검색하는 방법이다.
                            
                        3) 구조가 복잡한 데이터: 멀티미디어 데이터는 원시 데이터(raw data), 등록 데이터(registration data), 서술 데이터(description data)로 구성된다.
                                            
                                            raw data: 텍스트, 그래픽, 이미지, 비디오, 오디오 드 기본 타입의 데이터다.
                                            registration data: 멀티미디어 데이터의 특성과 필요한 정보를 별도로 추출한 데이터다.
                                            description data: 멀티미디어 데이터를 검색할 떄 사용되는 것으로 멀티미디어 데이터에 지전된 키워드나 자세한 설명등이 해당 됨
                                            
                    2. 멀티미디어 데이터베이스의 발전 과정
                    
                        1) 관계 데이터베이스에서의 멀티미디어 데이터 처리
                           1-1) 그래픽 등의 대용량 멀티미디어 데이터를 처리하기 위해 이진 대형 객체BLOB; Binary Large Object라는 새로운 데이터 타입을 지원한다.
                           1-2) 관계 데이터베이스가 제공하는 안정적인 이론과 다양한 기법을 그대로 이용할 수 있다는 장점이 있다.
                           
                        2) 객체지향 데이터베이스에서의 멀티미디어 데이터 처리
                           2-1) 객체지향 데이터베이스는 다양한 관계의 표현, 데이터 추상화와 캡슐화, 상속 등 멀티미디어 데이터를 처리하는 데 필요한 다양한 기능을 제공한다.
                           
                    3. 멀티미디어 데이터베이스 관리 시스템의 구성
                        멀티미디어 데이터베이스 시스템은 데이터베이스 시스템의 기본 기능을 제공할 뿐만 아니라,
                        멀티미디어 데이터 특성에 따른 다양하고 새로운 사항도 고려해야한다.
                        
                        멀티미디어 데이터는 일반 데이터와 달리 보통 대용량이고 시공간적 연속성을 가지고 있다.
                        대상으로 하는 미디어 데이터의 유형에 따라 멀티미디어 데이터베이스 관리 시스템의 구성이 달라진다.
                        
                        1) 파일 시스템을 이용하는 방식
                           응용 프로그램에 필요한 멀티미디어 데이터를 파일로 저장하고 관리한다.      
                            
                        2) 관계 데이터베이스 관리 시스템을 이용하는 방식
                            텍스트 같은 일반 데이터는 관계 데이터베이스에 저장하고, 이미지나 비지오 같은 데이터는 파일에 저장 (지리 정보 시스템등에서 많이 사용)
                        
                        3) 확장된 관계 데이터베이스 관리 시스템을 이용하는 방식
                            텍스트뿐만 아니라 이미지, 오디오, 비디오 같은 대용량의 멀티미디어 데이터를 모두 저장할 수 있도록,
                            기존의 관계 데이터베이스 관리 시스템을 확장한 방식이 있다.                        
                        
                        4) 객체지향 데이터베이스 관리 시스템을 이용하는 방식
                            객체지향 개념을 지원하는 데이터베이스 관리 시스템을 이용하는 방식이다.
                            객체지향 데이터베이스 관리 시스템은 다양한 관계의 표현, 데이터 추상화와 캡슐화, 상속 등의 객체 지향 개념을 지원한다
                            
                     4.
                        
