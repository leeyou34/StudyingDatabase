날짜: 20230410
작성자: leeyou34
공부 범주:
    가. chapter 07 데이터베이스 언어 SQL
    
요약:


가. chapter 07: 데이터베이스 언어 SQL
    
            07-01: SQL의 소개
                  1. Structured Query Language는 관계 데이터베이스를 위한 표준 질의어로 많이 사용되는 언어다.
                    1-1. 데이터 조작어: DML
                    1-2. 데이터 정의어: DDL
                    1-3. 데이터 제어어: DCL
            
            07-02: SQL을 이용한 데이터 정의
                  1. SQL의 데이터 정의 기능
                    1-1. 테이블 생성: Create Table
                    1-2. 테이블 변경: Alter Table
                    1-3. 테이블 삭제: Drop Table

                    예시) Create Table 테이블_이름 ( 
                            속성_이름     데이터_타입    [NOT NULL[]   [DEFAULT 기본_값]
                            [PRIMARY KEY (속성_리스트)]
                            [UNIQUE (속성_리스트)]
                            [FOREIGN KEY (속성_리스트) REFERENCES 테이블_이름(속성_리스트)]
                              [ON DELETE 옵션] [ON UPDATE 옵션]
                            [CONSTRAINT 이름] [CHECK(조건)]
                          );
                  
                  2. 테이블의 생성: 새로운 테이블을 생성하려면 먼저 테이블의 이름과 테이블을 구성하는 속성의 이름을 의미있게 정해야 한다.
                    2-1. 속성의 정의: 각 속성의 특성을 고려해 적절한 데이터 타입을 선택하여 정의한다.
                    2-2. 키의 정의: Create table 문으로 테이블을 정의할 때는 기본키, 대체키, 외래키를 지정할 수 있다.
                    2-3. 데이터 무결성 제약조건의 정의: Create table 문으로 테이블을 정의할 때 Check 키워드를 사용해 특정 속성에 대한 제약조건을 지정할 수 있다.
                    2-4. 테이블 생성의 예: 
                        
                        예제7-1
                        고객 테이블은 고객아이디, 고객이름, 나이, 등급, 직업, 적립금 속성으로 구성되고, 고객아이디 속성이 기본키다. 고객 이름과 등급 속성은 값을 반드시 입력해야 하고, 적립금 속성은 값을 입력하지 않으면 0이 기본으로 입력되도록 고객 테이블을 생성해보자.
                            
                        CREATE TABLE 고객 (
                            고객아이디 VARCHAR(20) NOT NULL
                            , 고객이름 VARCHAR(20) NOT NULL
                            , 나이 INT
                            , 등급 VARHCAR(10) NOT NULL
                            , 직업 VARCHAR(20)
                            , 적립금 INT DEFAULT 0
                            , PRIMARY KEY(고객아이디)
                        );
                    
                    
                        예제7-2
                        제품 테이블은 제품번호, 제품명, 재고량, 단가, 제조업체 속성으로 구성되고, 제품번호 속성이 기본키다. 재고량이 항상 0개 이상 10,000개 이하를 유지하도록 제품 테이블을 생성해보자.
                        
                        CREATE TABLE 제품 (
                            제품번호 CHAR(3) NOT NULL
                            , 제품명 VARCHAR(20)
                            , 재고량 INT
                            , 단가 INT
                            , 제조업체 VARHCAR(20)
                            , PRIMARY KEY(제품번호)
                            , CHECK (재고량 >=0 AND 재고량 <=10000)
                        );
                        
                        예제7-3
                        
                        CREATE TABLE 주문 (
                              주문번호 CHAR(3) NOT NULL
                            , 주문고객 VARCHAR(20)
                            , 주문제품 CHAR(3)
                            , 수량 INT
                            , 배송지 VARHCAR(30)
                            , 주문일자 DATE
                            , PRIMARY KEY(주문번호)
                            , FOREIGN KEY(주문고객) REFERENCES 고객(고객아이디)
                            , FOREIGN KEY(주문제품) REFERENCES 제품(제품번호)
                         );
                         
                         
                         예제7-4
                         
                         CREATE TABLE 배송업체 (
                                  업체번호 CHAR(3) NOT NULL
                                , 업체명 VARCHAR(20)
                                , 주소 VARCHAR(100)
                                , 전화번호 VARCHAR(20)
                                , PRIMARY KEY(업체번호)
                         );
                         
                    3. 테이블의 변경
                          새로운 속성의 추가: 
                            ALTER TABLE 테이블_이름
                            ADD 속성_이름 데이터_타입 [NOT NULL] [DEFAULT 기본_값];
                                    
                                    
                          예제7-5
                            ALTER TABLE 고객 ADD 가입날짜 DATE;
                          
                          
                          기본 속성의 삭제
                          
                            ALTER TABLE 테이블_이름 DROP COLUMN 속성_이름;
                          
                          
                          
                          예제7-6
                            ALTER TABLE 고객 DROP COLUMN 가입날짜;
                          
                          
                          새로운 제약조건 추가
                            ALTER TABLE 테이블_이름 ADD CONSTRAINT 제약조건_이름 제약조건_내용;
                          
                          
                          예제7-7
                            ALTER TABLE 고객 ADD CONSTRAINT CHK_AGE CHECK(나이>=20);
                          
                          
                          기존 제약조간의 삭제
                            ALTER TABLE 고객 DROP CONSTRAINT CHK_AGE;
                            
                     4. 테이블의 삭제
                        DROP TABLE 테이블_이름;
                        
                          예제7-9
                            DROP TABLE 배송업체;
                            
             
            07-03: SQL을 이용한 데이터 조작
                    1. SQL의 데이터 조작 기능
                       데이터 검색: SELECT
                       데이터 삽입: INSERT
                       데이터 수정: UPDATE
                       데이터 삭제: DELTE
                       
                    2. 데이터의 검색
                       예시) INSERT INTO 고객 VALUES ('apple', '정소화', '20, 'gold', '학생', 1000);
                       
                        2-1. 기본검색
                             SELECT ALL or DISTINCT 속성_리스트
                             FROM 테이블_리스트;
  
                            예제:7-10. 
                                SELECT 고객아이디, 고객이름, 등급
                                FROM 고객;
                             
                            예제:7-11.
                                SELECT 고객아이디, 고객이름, 나이, 등급, 직업, 적립금
                                FROM 고객;
                                
                            예제:7-12
                                SELECT * 
                                FROM 고객;
                                
                            예제:7-13
                                SELECT 제조업체
                                FROM 제품;
                            
                            예제:7-14
                                SELECT ALL 제조업체
                                FROM 제품;
                                
                            예제:7-15.
                                SELECT DISTINCT 제조업체
                                FROM 제품;
                                
                            예제:7-16.
                                SELECT 제품명, 단가 AS 가격
                                FROM 제품;
                                
                            예제:7-17.
                                SELECT 제품명, 단가+500 AS "조정 단가"
                                FROM 제품;
                                
                    3. 조건 검색
                       SELECT ALL or DISTINCT 속성_리스트
                       FROM 테이블_리스트
                       WHERE 조건;
                       
                            예제:7-18.
                                SELECT 제품명, 재고량, 단가
                                FROM 제품
                                WHERE 제조업체 = '한빛제과';
                                
                            예제:7-19.
                                SELECT 주문제품, 수량, 주문일자
                                FROM 주문
                                WHERE 제조업체 = 'apple' AND 수량 >=15;
                                
                            예제:7-20.
                                SELECT 주문제품, 수량, 주문일자, 주문고객
                                FROM 주문
                                WHERE 주문고객='apple' OR 수량 >=15;
                                
