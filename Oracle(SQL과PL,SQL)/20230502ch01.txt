Date: 2023-05-02
Title: sleect 명령을 이용하여 데이터 조회

문법: 
      SELECT [컬럼명 또는 표현식]
      FROM [테이블명, 뷰 명];



1. 모든 컬럼 조회하기


  select * from emp;
  -> emp 테이블에 있는 모든 컬럼을 조회(레코드 값 출력 됨)
  
  
  desc dept;
  -> dept 테이블에 어떤 컬럼들이 있는지 확인 가능하다.
  
  
  
2. 원하는 컬럼만 조회하기
  select empno, ename from emp;
  
  
  
  ##참고
  # 데이터가 숫자일 경우
  문법: col empno for 9999
  의미: empno라는 컬럼의 길이를 숫자 4자리까지 들어가게 설정
  
  # 데이터가 문자일 경우
  문법: col ename for a8
  의미: ename이란 컬럼의 길이를 8바이트까지 들어가게 설정
  
  # 한 화면에 출력 가능한 줄 길이 설정 (가로 길이 설정)
  문법: set line 200
  의미: 한 화면을 가로로 200바이트까지 출력되게 함
  
  # 한 페이지에 출력 가능한 줄 수 설정 (세로 길이 설정)
  문법: set pages 50
  의미: 한 페이지에 50줄까지 출력
  

3. SELECT 명령에 표현식을 사용하여 출력하기
  표현식(expression)이란 컬럼 이름 이외에 출력하기를 원하는 내용을 의미한다.
  
  ##예제
  select name, 'good morning~~!' "Good Morning" from professor;
  
  이중, 'good morning~~!' 부분을 표현식이라고 하고, 리터럴(literal) 상수(문자)라고 하며 보통 리터럴이라고 한다.
  리터럴 안에 작은따옴표가 있을 경우, 다음과 같이 q와 대괄호를 사용하여 출력한다.
  
  select dname, q'[, it's deptno : ]' , deptno "DNAME AND DEPTNO" from dept;
  
4. 컬럼 별칭 사용하여 출력하기
  
  ## 예제
  -> 변경 전
  select profno, name, pay from professor;
  -> 변경 후
  SELECT profno "Prof NO" , name as "Prof's Name", pay Prof_Pay from professor;
  
  원래 테이블의 컬럼 이름이 바뀐 것이 아닌, 출력될 떄 임시로 바꾸어서 보여줌.
  

5. DISTINCT 명령어 - 중복된 값을 제거하고 출력하기

  ##예제
  -> 중복된 값 출력
  select depno from emp;
  
  -> 중복된 값 제거
  select distinct depno from emp;
  
  ** HASH 알고리즘 사용하는 방식으로 변경되어 정렬이 안되니, 정렬이 필요하면 따로 작업이 필요함
      ##예시
        -> 중복된 값은 출력하되, 정렬 작업
        select job, ename from emp order by 1,2;
        
        -> 중복된 값 제거 및 정렬 작업
        select distinct job, ename from emp order by 1, 2;
        
  
 6. 연결 연산자로 컬럼을 붙여서 출력하기
    데이터를 조회하다 보면 서로 다른 컬럼을 하나의 컬럼인 것 과 같이 출력해야할 경우가 필요하다.
    ## 예제
    -> 연결 연산자 사용 전
    select ename, job from emp;
    
    -> 연결 연산자 사용 후
    select ename || job from emp;
    
    
    -> 연결 연산자 응용 후
    select ename||' ''s job is '|| job "NAME AND JOB" from emp;
    
    
    
    연습문제 1
    Student 테이블에서 모든 학생의 이름과 ID, 체중을 아래 화면과 같이 출력하세요. 컬럼 이름은 ID AND WEIGHT로 나오게 하세요.
    
    답: select NAME||'''s ID : '||ID||', weight is '||WEIGHT||'Kg' "ID and weight" from student;
    
    
    
    연습문제 2
    emp 테이블을 조회하여 모든 사람의 이름과 직업을 아래와 같이 출력 할 것
    
    답: select ENAME||'('||JOB||')'||' , '||ENAME||''''||JOB||''''  "NAME AND JOB" from emp;
    
    
    
    연습문제 3
    emp 테이블을 조회하여 모든 사원의 이름과 급여를 아래와 같은 형태로 출력
    
    답: select ENAME||'''s SAL is '||SAL "Name and SAL" from emp;
    



7. 원하는 조건만 골라내기 - WHERE 절 사용
  데이터를 조회 할 떄 원하는 데이터만 골라서 조회하는 경우가 있다.
  
  문법: SELECT [ Column or Expression]
        FROM [ TABLE or View ]
        WHERE 원하는 조건;

   
  ** WHERE 절은 반드시 FROM 절 아래에 기술되어야 한다.
  
  예시1: select empno, ename from emp where empno = 7900;
  예시2: select ename, sal from emp where sal < 1000;
  
  ** 문자와 날짜를 조회하고 싶은 경우엔 반드시 해당 문자나 날짜에 작은 따옴표 붙여야 한다.
  
  
  예시3: select empno, ename, sal from emp where ename='SMITH';
  ** 문자 조회시 작은 따옴표와 재소문자 구분이 필요하다.
  
  
  예시4: select ename, hiredate from emp where ename='SMITH';
  
  **만약에 날짜로 조건부 조회를 희망한다면...
  
  예시5: select empno, ename, sal from emp where hiredate='80/12/17';
  
  
    
8. SQL에서 기본 산술 연산자 사용하기

  예시1: 
  -> 산술 연산자 사용 전
  select ename, sal from emp where deptno='10';
  
  -> 산술 연산자 사용 후 (덧셈)
  select ename, sal+100 from emp where deptno='10';
  
  -> 산술 연산자 사용 후 (곱셉)
  select ename, sal*1.1 from emp where deptno='10';
  
  
  
9. 다양한 연산자를 활용하는 방법

  비교연산자
        예시1:
        SELECT empno, ename, sal FROM emp WHERE sal >= 4000;

        예시2:
        SELECT empno, ename, sal FROM emp WHERE ename >= 'W'; 

        예시3:
        **날짜도, 비교 연산자 사용이 가능하다.
        SELECT ename, hiredate from emp where hiredate>='81/12/25';


  Between 연산자로 구간 데이터 조회하기
        
        예시1:
        문: emp 테이블에서 sal이 2000과 3000사이인 사람들의 empno, ename, sal을 출력하라
        답1: select empno, ename, sal from emp where sal between '2000' and '3000';
      
            ** 하지만 출력 결과의 속도를 위해선 하기의 방법으로 출력한다.
        답2: select empno, ename, sal from emp where sal>='2000' and sal<='3000';
      
      
        예시2:
        문: 노동자 이름 검색 및 정렬
        답1: select ename from emp order by ename;
        
        답2: select ename from emp where ename between 'JAMES' and 'MARTIN' order by ename;
        


   IN 연산자로 여러 조건을 간편하게 검색하기

        예시1:
        문: depno 숫자에 조건을 걸어 검색하기
        답: select empno, ename, deptno from emp where deptno IN (10, 20);
        
  
   Like 연산자로 비슷한 것들 모두 찾기
      Like와 함께 사용되는 기호에는 '%' '_'두 가지가 있으며 의미는 아래와 같습니다.
      -%: 글자 수에 제한이 없고(0개 포함) 어떤 글자가 와도 상관없습니다.
      -_(Underscore): 글자 수는 한 글자만 올 수 있고 어떤 글자가 와도 상관없습니다.
      
       예시1:
       문: 연봉이 1로 시작하는 노동자 검색
       답: select empno, ename, sal from emp where sal LIKE '1%';
       
       
       예시2:
       문: 이름이 A로 시작하는 노동자 검색
       답: select empno, ename, sal from emp where ename LIKE 'A%';
     
     
       예시3:
       문: 입사날짜로 검색하여 노동자 검색
       답: select empno, ename, hiredate from emp where hiredate Like '%80';
       -> 만약에 레코드 값이 80/12/17일 경우엔, Like '80%'; 으로 써서 레코드 조회 할 것
       
       예시4: 
       문: 입사일이 12월인 사람을 출력하라.
       답: select empno, ename, hiredate from emp where hiredate Like'___12%';
       
    값이 무엇인지 모를 경우 (IS NULL / IS NOT NULL 연산자 활용하기)
    
       예시1:
       select empno, ename, comm from emp where deptno IN (20,30);
       
       select empno, ename, comm from emp where comm=NULL;
       -> null 값을 조회하면 선택된 레코드가 없다고 화면에 출력된다.
       이유는 = 연산자로 인해서 이며
       NULL 값을 출력하기 위해서 하기와 같이 코드를 작성한다.
       
       
       select empno, ename, comm from emp where comm is null;
       -> 정상적으로 NULL 값을 가진 레코드가 출력된다.
       
       
       select empno, ename, comm from emp where comm is not null;
       -> 정상적으로 값이 있는 레코드가 출력된다.
    
    
     검색 조건이 두 개 이상일 경우 조회하기
      두 조건이 동시에 만족해야 하는 경우 AND를 사용하고
      둘 중 한가지 조건만 만족하는 경우 OR 사용
     
       예시1:
       select ename, hiredate, sal from emp where hiredate > '82/01/01' and Sal >= 1300;
       
       예시2:
       select ename, hiredate, sal from emp where hiredate > '82/01/01' or Sal >= 1300;
       
       
       예시3:
       select empno, ename, sal, comm from emp where sal > 1000 and (comm<1000 or comm is null);
            -> 조회시, 중괄호 내에 내용을 먼저 검색 후 where sal > 1000을 작업한다. 
       
       예시4:
       select empno, ename, sal, comm from emp where sal > 1000 and comm < 1000 or comm is null;
       -> 문자 그대로 연역법 순서로 출력된다.
       
       
     사용자에게 조건을 입력 받아서 조건에 맞는 값 출력하기
     
      
